#!/usr/bin/env python3
"""
Teste simples usando modelo YOLO pr√©-treinado
"""

from ultralytics import YOLO
import cv2
import os

def test_simple_detection():
    """Testa detec√ß√£o usando modelo YOLO pr√©-treinado"""
    
    print("üîç Testando detec√ß√£o YOLO (modelo pr√©-treinado)...")
    
    # Usar modelo pr√©-treinado (mais est√°vel)
    model = YOLO('yolov8n.pt')
    
    print(f"‚úÖ Modelo carregado: yolov8n.pt")
    print(f"üìã Classes detect√°veis: {len(model.names)} classes")
    print()
    
    # Testar com imagens do dataset_teste
    test_dir = './dataset_teste'
    
    if not os.path.exists(test_dir):
        print(f"‚ùå Diret√≥rio {test_dir} n√£o encontrado")
        return
    
    for filename in os.listdir(test_dir):
        if filename.lower().endswith(('.jpg', '.jpeg', '.png')):
            image_path = os.path.join(test_dir, filename)
            
            print(f"üñºÔ∏è  Analisando: {filename}")
            
            # Carregar imagem
            image = cv2.imread(image_path)
            if image is None:
                print(f"   ‚ùå Erro ao carregar imagem")
                continue
            
            # Detectar objetos
            results = model(image, verbose=False)
            
            detected_objects = []
            for r in results:
                for box in r.boxes:
                    if box.conf > 0.5:  # Limiar de confian√ßa
                        class_id = int(box.cls)
                        class_name = model.names[class_id]
                        confidence = float(box.conf)
                        detected_objects.append(f"{class_name} ({confidence:.2f})")
            
            if detected_objects:
                print(f"   ‚úÖ Objetos detectados: {', '.join(detected_objects)}")
                
                # Verificar se h√° p√°ssaros (bird)
                has_bird = any('bird' in obj.lower() for obj in detected_objects)
                if has_bird:
                    print(f"   üê¶ CONCLUS√ÉO: P√°ssaro detectado!")
                else:
                    print(f"   ‚ùì CONCLUS√ÉO: Nenhum p√°ssaro detectado")
            else:
                print(f"   ‚ùå Nenhum objeto detectado com confian√ßa suficiente")
            
            print()

if __name__ == "__main__":
    test_simple_detection()
